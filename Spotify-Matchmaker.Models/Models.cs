// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using SpotifyMatchmaker.Models;
//
//    var party = Party.FromJson(jsonString);

namespace SpotifyMatchmaker.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Party
    {
        [JsonProperty("party_code")]
        public string PartyCode { get; set; }

        [JsonProperty("host")]
        public string Host { get; set; }

        [JsonProperty("person2")]
        public string Person2 { get; set; }

        [JsonProperty("person3")]
        public string Person3 { get; set; }

        [JsonProperty("person4")]
        public string Person4 { get; set; }

        [JsonProperty("person5")]
        public string Person5 { get; set; }
    }

    public partial class Welcome
    {
        public static Welcome FromJson(string json) => JsonConvert.DeserializeObject<Welcome>(json, SpotifyMatchmaker.Models.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Welcome self) => JsonConvert.SerializeObject(self, SpotifyMatchmaker.Models.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
