// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using SpotifyMatchmaker.Library.Models;
//
//    var tracks = Tracks.FromJson(jsonString);

namespace SpotifyMatchmaker.Library.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Tracks
    {
        public static Tracks FromJson(string json) => JsonConvert.DeserializeObject<Tracks>(json, SpotifyMatchmaker.Library.Models.TracksConverter.Settings);
    }

    public static class TracksSerialize
    {
        public static string ToJson(this Tracks self) => JsonConvert.SerializeObject(self, SpotifyMatchmaker.Library.Models.TracksConverter.Settings);
    }

    internal static class TracksConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
